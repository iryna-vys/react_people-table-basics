{"version":3,"sources":["components/HomePage/HomePage.jsx","components/PersonRow/PersonRow.jsx","components/PeopleTable/PeopleTable.jsx","components/PeoplePage/PeoplePage.jsx","api/api.js","components/NotFounPage/NotFoundPage.jsx","App.jsx","index.jsx"],"names":["HomePage","PersonRow","name","sex","born","died","motherName","fatherName","PeopleTable","people","className","map","person","key","PeoplePage","useState","setPeople","useEffect","fetch","then","response","json","i","arr","mother","find","father","NotFoundPage","App","to","path","exact","ReactDOM","render","document","getElementById"],"mappings":"kPAEaA,EAAW,kBACtB,0C,gBCAWC,EAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,KACAC,EAFuB,EAEvBA,IACAC,EAHuB,EAGvBA,KACAC,EAJuB,EAIvBA,KACAC,EALuB,EAKvBA,WACAC,EANuB,EAMvBA,WANuB,OAQvB,4BACE,4BAAKL,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,KCZIC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzB,2BAAOC,UAAU,SACf,+BACE,4BACE,oCACA,mCACA,oCACA,oCACA,sCACA,wCAGJ,+BACGD,EAAOE,KAAI,SAAAC,GAAM,OAChB,kBAAC,EAAD,eAAWC,IAAKD,EAAOV,MAAUU,UCb5BE,EAAa,WACxB,MAA4BC,mBAAS,IAArC,mBAAON,EAAP,KAAeO,EAAf,KAOA,OALAC,qBAAU,WCRVC,MAAM,qEACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAV,GAAM,OAAIA,EAAOE,KAAI,SAACC,EAAQU,EAAGC,GAAZ,mBAAC,eACvBX,GADsB,IAEzBY,OAAQD,EAAIE,MAAK,SAAAD,GAAM,OAAIA,EAAOtB,OAASU,EAAON,cAClDoB,OAAQH,EAAIE,MAAK,SAAAC,GAAM,OAAIA,EAAOxB,OAASU,EAAOL,sBDKjDY,KAAKH,KACP,IAGD,oCACE,2CAGA,kBAAC,EAAD,CAAaP,OAAQA,MEjBdkB,EAAe,kBAC1B,+CCoCaC,G,MA1BH,kBACV,yBAAKlB,UAAU,OACb,gCACE,6BACE,wBAAIA,UAAU,gBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWmB,GAAG,KAA9B,SAEF,wBAAInB,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWmB,GAAG,WAA9B,cAKR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,EAAD,UC1BNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.9f5801c9.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage = () => (\n  <h1>\n    Home page\n  </h1>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const PersonRow = ({\n  name,\n  sex,\n  born,\n  died,\n  motherName,\n  fatherName,\n}) => (\n  <tr>\n    <td>{name}</td>\n    <td>{sex}</td>\n    <td>{born}</td>\n    <td>{died}</td>\n    <td>{motherName}</td>\n    <td>{fatherName}</td>\n  </tr>\n);\n\nPersonRow.propTypes = {\n  name: PropTypes.string.isRequired,\n  sex: PropTypes.string.isRequired,\n  born: PropTypes.number.isRequired,\n  died: PropTypes.number.isRequired,\n  motherName: PropTypes.string.isRequired,\n  fatherName: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PersonRow } from '../PersonRow/PersonRow';\n\nexport const PeopleTable = ({ people }) => (\n  <table className=\"table\">\n    <thead>\n      <tr>\n        <td>Name</td>\n        <td>Sex</td>\n        <td>Born</td>\n        <td>Died</td>\n        <td>Mother</td>\n        <td>Father</td>\n      </tr>\n    </thead>\n    <tbody>\n      {people.map(person => (\n        <PersonRow key={person.name} {...person} />\n      ))}\n    </tbody>\n  </table>\n);\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(\n    PropTypes.shape({}).isRequired,\n  ).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { getPeople } from '../../api/api';\n\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople);\n  }, []);\n\n  return (\n    <>\n      <h1>\n        People page\n      </h1>\n      <PeopleTable people={people} />\n    </>\n  );\n};\n","export const getPeople = () => (\n  fetch(`https://mate-academy.github.io/react_people-table/api/people.json`)\n    .then(response => response.json())\n    .then(people => people.map((person, i, arr) => ({\n      ...person,\n      mother: arr.find(mother => mother.name === person.motherName),\n      father: arr.find(father => father.name === person.fatherName),\n    })))\n);\n","import React from 'react';\n\nexport const NotFoundPage = () => (\n  <h1>\n    Page not found\n  </h1>\n);\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\n\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFounPage/NotFoundPage';\n\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <header>\n      <nav>\n        <ul className=\"nav nav-tabs\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/\">Home</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/people\">People</Link>\n          </li>\n        </ul>\n      </nav>\n    </header>\n    <Switch>\n      <Route path=\"/people\">\n        <PeoplePage />\n      </Route>\n      <Route path=\"/\" exact>\n        <HomePage />\n      </Route>\n      <NotFoundPage />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}